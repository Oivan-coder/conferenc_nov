// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const CONFIG = {
    // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API –∫–ª—é—á –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
    yandexMapsApiKey: 'YOUR_YANDEX_MAPS_API_KEY',
    
    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ë–¶ "–ù–æ–≤–∞—Ç–æ—Ä"
    location: {
        coordinates: [55.817062, 37.383687],
        address: '–±-—Ä –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 7, –ö—Ä–∞—Å–Ω–æ–≥–æ—Ä—Å–∫, –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, 143407',
        name: '–ë–¶ "–ù–æ–≤–∞—Ç–æ—Ä"'
    },
    
    // –î–∞–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    event: {
        title: 'LAB Evolution 2025',
        description: '–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Å–ª—É–∂–±–∞: –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫ –∫–∞—á–µ—Å—Ç–≤—É"',
        date: '2025-11-21',
        time: '11:00',
        duration: 7 // —á–∞—Å–æ–≤
    }
};

// –î–∞–Ω–Ω—ã–µ —Å–ø–∏–∫–µ—Ä–æ–≤ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
const speakers = [
    {
        name: "–§–∞–Ω–∏–ª—å –°–∞–º—É–∏–ª–æ–≤–∏—á –ë–∏–ª–∞–ª–æ–≤",
        role: "–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –æ–Ω–∫–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ",
        topic: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –æ–Ω–∫–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ",
        photo: "üßë‚Äç‚öïÔ∏è"
    },
    {
        name: "–ì—É–ª—å–Ω–∞—Ä–∞ –í–∏—Ç–∞–ª—å–µ–≤–Ω–∞ –õ–µ—à–∫–∏–Ω–∞",
        role: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ü–∏—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ", 
        topic: "–¶–∏—Ç–æ–ª–æ–≥–∏—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ",
        photo: "üë©‚Äç‚öïÔ∏è"
    },
    {
        name: "–ú–∞—Ä–∏—è –ì–µ–æ—Ä–≥–∏–µ–≤–Ω–∞ –õ–∞–º–±–∞–∫–∞—Ö–∞—Ä",
        role: "–†–ú–ê–ù–ü–û, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∞–¥—Ä–æ–≤–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é",
        topic: "–†–∞–∑–≤–∏—Ç–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Å–ª—É–∂–±—ã",
        photo: "üë©‚Äçüè´"
    },
    {
        name: "–õ—é–±–æ–≤—å –ò–≤–∞–Ω–æ–≤–Ω–∞ –°—Ç–∞–Ω–∫–µ–≤–∏—á",
        role: "LabQuest, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Å–µ—Ç—å—é",
        topic: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è –∏ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
        photo: "üë®‚Äçüíº"
    },
    {
        name: "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ Hadassah",
        role: "–ö–ª–∏–Ω–∏–∫–∞ Hadassah, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã", 
        topic: "JCI, ISO –∏ –ø–∞—Ü–∏–µ–Ω—Ç-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
        photo: "üè•"
    },
    {
        name: "–ì–ª–∞–≤–Ω—ã–µ –≤–Ω–µ—à—Ç–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã",
        role: "–ü–æ –í–ò–ß –∏ –¥–µ—Ä–º–∞—Ç–æ–≤–µ–Ω–µ—Ä–æ–ª–æ–≥–∏–∏",
        topic: "–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å –í–ò–ß –∏ —Å–∏—Ñ–∏–ª–∏—Å–æ–º",
        photo: "üë®‚Äçüî¨"
    }
];

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentSlide = 0;
let autoSlideInterval;
let yandexMap = null;

// ==================== –ö–ê–†–£–°–ï–õ–¨ –°–ü–ò–ö–ï–†–û–í ====================

function initCarousel() {
    const carouselTrack = document.getElementById('carouselTrack');
    const carouselDots = document.getElementById('carouselDots');
    
    if (!carouselTrack || !carouselDots) return;
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    carouselTrack.innerHTML = '';
    carouselDots.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥—ã
    speakers.forEach((speaker, index) => {
        const slide = document.createElement('div');
        slide.className = 'speaker-slide';
        slide.setAttribute('data-slide-index', index);
        slide.innerHTML = `
            <div class="speaker-photo" aria-label="–§–æ—Ç–æ —Å–ø–∏–∫–µ—Ä–∞">${speaker.photo}</div>
            <div class="speaker-name">${speaker.name}</div>
            <div class="speaker-role">${speaker.role}</div>
            <div class="speaker-topic">${speaker.topic}</div>
        `;
        carouselTrack.appendChild(slide);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const dot = document.createElement('button');
        dot.className = `carousel-dot ${index === 0 ? 'active' : ''}`;
        dot.setAttribute('aria-label', `–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É ${index + 1}`);
        dot.addEventListener('click', () => goToSlide(index));
        carouselDots.appendChild(dot);
    });
    
    updateCarousel();
    startAutoSlide();
}

function moveSlide(direction) {
    const totalSlides = speakers.length;
    currentSlide = (currentSlide + direction + totalSlides) % totalSlides;
    updateCarousel();
    resetAutoSlide();
}

function goToSlide(index) {
    currentSlide = index;
    updateCarousel();
    resetAutoSlide();
}

function updateCarousel() {
    const carouselTrack = document.getElementById('carouselTrack');
    const dots = document.querySelectorAll('.carousel-dot');
    const slideWidth = 320;
    
    if (carouselTrack) {
        carouselTrack.style.transform = `translateX(-${currentSlide * slideWidth}px)`;
    }
    
    dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentSlide);
        dot.setAttribute('aria-current', index === currentSlide ? 'true' : 'false');
    });
}

function startAutoSlide() {
    autoSlideInterval = setInterval(() => {
        moveSlide(1);
    }, 5000);
}

function stopAutoSlide() {
    if (autoSlideInterval) {
        clearInterval(autoSlideInterval);
    }
}

function resetAutoSlide() {
    stopAutoSlide();
    startAutoSlide();
}

function initCarouselEvents() {
    const prevBtn = document.querySelector('.carousel-btn-prev');
    const nextBtn = document.querySelector('.carousel-btn-next');
    const carousel = document.querySelector('.carousel-container');
    
    if (prevBtn) prevBtn.addEventListener('click', () => moveSlide(-1));
    if (nextBtn) nextBtn.addEventListener('click', () => moveSlide(1));
    
    if (carousel) {
        carousel.addEventListener('mouseenter', stopAutoSlide);
        carousel.addEventListener('mouseleave', startAutoSlide);
        carousel.addEventListener('touchstart', stopAutoSlide);
        carousel.addEventListener('touchend', startAutoSlide);
    }
}

// ==================== –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ö–ê–†–¢–ê ====================

function initYandexMap() {
    const mapContainer = document.getElementById('yandexMap');
    
    if (!mapContainer) return;
    
    if (window.ymaps) {
        createMap();
    } else {
        loadYandexMapsAPI();
    }
}

function loadYandexMapsAPI() {
    // –ï—Å–ª–∏ API –∫–ª—é—á –Ω–µ —É–∫–∞–∑–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ–ª–±—ç–∫
    if (!CONFIG.yandexMapsApiKey || CONFIG.yandexMapsApiKey === 'YOUR_YANDEX_MAPS_API_KEY') {
        showMapFallback();
        return;
    }
    
    const script = document.createElement('script');
    script.src = `https://api-maps.yandex.ru/2.1/?apikey=${CONFIG.yandexMapsApiKey}&lang=ru_RU`;
    script.onload = () => ymaps.ready(createMap);
    script.onerror = () => {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç');
        showMapFallback();
    };
    document.head.appendChild(script);
}

function createMap() {
    try {
        yandexMap = new ymaps.Map('yandexMap', {
            center: CONFIG.location.coordinates,
            zoom: 16,
            controls: ['zoomControl', 'fullscreenControl', 'typeSelector']
        });

        // –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        const placemark = new ymaps.Placemark(
            CONFIG.location.coordinates,
            {
                hintContent: CONFIG.location.name,
                balloonContent: `
                    <div class="map-balloon">
                        <h3>${CONFIG.location.name}</h3>
                        <p>${CONFIG.location.address}</p>
                        <p><strong>LAB Evolution 2025</strong></p>
                        <p>21 –Ω–æ—è–±—Ä—è, 11:00</p>
                        <button onclick="openNavigation()" style="
                            background: var(--primary); 
                            color: white; 
                            border: none; 
                            padding: 8px 16px; 
                            border-radius: 4px; 
                            cursor: pointer; 
                            margin-top: 10px;
                        ">–ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç</button>
                    </div>
                `
            },
            {
                preset: 'islands#blueIcon',
                iconColor: '#0d47a1'
            }
        );

        yandexMap.geoObjects.add(placemark);

        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
            yandexMap.behaviors.disable('scrollZoom');
        }

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–ª—É–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –º–µ—Ç–∫—É
        placemark.events.add('click', function() {
            yandexMap.balloon.open(CONFIG.location.coordinates, {
                content: `
                    <div class="map-balloon">
                        <h3>${CONFIG.location.name}</h3>
                        <p>${CONFIG.location.address}</p>
                        <p><strong>–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è LAB Evolution 2025</strong></p>
                        <p>üìÖ 21 –Ω–æ—è–±—Ä—è 2025, 11:00</p>
                        <p>üöá –ú–µ—Ç—Ä–æ "–ú—è–∫–∏–Ω–∏–Ω–æ" - 5 –º–∏–Ω—É—Ç</p>
                        <p>üöó –ü–∞—Ä–∫–æ–≤–∫–∞ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</p>
                    </div>
                `
            });
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã:', error);
        showMapFallback();
    }
}

function showMapFallback() {
    const mapContainer = document.getElementById('yandexMap');
    if (mapContainer) {
        mapContainer.innerHTML = `
            <div class="map-fallback">
                <div class="fallback-content">
                    <span class="fallback-icon">üó∫Ô∏è</span>
                    <h3>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞</h3>
                    <p>–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç</p>
                    <div class="fallback-buttons">
                        <a href="https://yandex.ru/maps/org/bc_novator/1125366325/?ll=37.383687%2C55.817062&z=17" 
                           target="_blank" class="fallback-btn">
                            –û—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö
                        </a>
                        <button class="fallback-btn secondary" onclick="openNavigation()">
                            –ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç
                        </button>
                    </div>
                </div>
            </div>
        `;
    }
}

function openNavigation() {
    const { coordinates, address } = CONFIG.location;
    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    
    if (isMobile) {
        // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–ù–∞–≤–∏–≥–∞—Ç–æ—Ä–µ
        window.location.href = `yandexnavi://build_route_on_map?lat_to=${coordinates[0]}&lon_to=${coordinates[1]}`;
        
        // –§–æ–ª–±—ç–∫ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
            window.open(`https://yandex.ru/maps/?pt=${coordinates[1]},${coordinates[0]}&z=16&l=map`, '_blank');
        }, 1000);
    } else {
        window.open(`https://yandex.ru/maps/?pt=${coordinates[1]},${coordinates[0]}&z=16&l=map&rtext=~${coordinates[0]},${coordinates[1]}`, '_blank');
    }
    
    showNotification('üó∫Ô∏è –û—Ç–∫—Ä—ã–≤–∞—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –¥–æ –ë–¶ "–ù–æ–≤–∞—Ç–æ—Ä"...', 'info');
}

function initMapFunctions() {
    const navBtn = document.getElementById('openNavigation');
    if (navBtn) {
        navBtn.addEventListener('click', function(e) {
            e.preventDefault();
            openNavigation();
        });
    }
    
    initYandexMap();
}

// ==================== –ö–ê–õ–ï–ù–î–ê–†–¨ ====================

function addToCalendar() {
    try {
        const startDate = new Date(`${CONFIG.event.date}T${CONFIG.event.time}`);
        const endDate = new Date(startDate.getTime() + CONFIG.event.duration * 60 * 60 * 1000);
        
        const formatDate = (date) => {
            return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';
        };

        const icsContent = `BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//LAB Evolution//Conference 2025//RU
BEGIN:VEVENT
UID:${Date.now()}@labevolution2025.ru
DTSTAMP:${formatDate(new Date())}
DTSTART:${formatDate(startDate)}
DTEND:${formatDate(endDate)}
SUMMARY:${CONFIG.event.title}
DESCRIPTION:${CONFIG.event.description}\\\\n\\\\nüìÖ –î–∞—Ç–∞: 21 –Ω–æ—è–±—Ä—è 2025 –≥.\\\\n‚è∞ –í—Ä–µ–º—è: 11:00\\\\nüìç –ú–µ—Å—Ç–æ: ${CONFIG.location.address}
LOCATION:${CONFIG.location.address}
ORGANIZER;CN="LAB Evolution":mailto:info@labevolution.ru
STATUS:CONFIRMED
END:VEVENT
END:VCALENDAR`;

        const blob = new Blob([icsContent], { 
            type: 'text/calendar;charset=utf-8' 
        });
        const url = window.URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = 'LAB_Evolution_2025.ics';
        link.style.display = 'none';
        
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        window.URL.revokeObjectURL(url);
        
        showNotification('üìÖ –§–∞–π–ª –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å–∫–∞—á–∞–Ω! –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å.', 'success');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
        showNotification('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è', 'error');
    }
}

function initCalendarButtons() {
    document.querySelectorAll('#addToCalendar, #addToCalendarFooter, .cta-button').forEach(button => {
        if (button.textContent.includes('–∫–∞–ª–µ–Ω–¥–∞—Ä—å') || button.id.includes('Calendar')) {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                addToCalendar();
            });
        }
    });
}

// ==================== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ====================

function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-message">${message}</span>
            <button class="notification-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ">√ó</button>
        </div>
    `;
    
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? 'var(--success)' : type === 'error' ? 'var(--error)' : 'var(--primary)'};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        box-shadow: var(--shadow-hover);
        z-index: 10000;
        animation: slideInRight 0.3s ease;
        max-width: 400px;
        min-width: 300px;
    `;
    
    document.body.appendChild(notification);
    
    const closeBtn = notification.querySelector('.notification-close');
    closeBtn.addEventListener('click', () => closeNotification(notification));
    
    setTimeout(() => closeNotification(notification), 5000);
}

function closeNotification(notification) {
    notification.style.animation = 'slideOutRight 0.3s ease';
    setTimeout(() => {
        if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
        }
    }, 300);
}

// ==================== –ù–ê–í–ò–ì–ê–¶–ò–Ø –ò –ê–ù–ò–ú–ê–¶–ò–ò ====================

function initBackToTop() {
    const backToTop = document.getElementById('backToTop');
    
    if (!backToTop) return;
    
    window.addEventListener('scroll', () => {
        if (window.pageYOffset > 300) {
            backToTop.classList.add('visible');
        } else {
            backToTop.classList.remove('visible');
        }
    });
    
    backToTop.addEventListener('click', (e) => {
        e.preventDefault();
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
}

function initSmoothScroll() {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            const href = this.getAttribute('href');
            
            if (href === '#' || href === '#top') {
                e.preventDefault();
                window.scrollTo({ top: 0, behavior: 'smooth' });
                return;
            }
            
            const targetElement = document.querySelector(href);
            if (targetElement) {
                e.preventDefault();
                const headerHeight = document.querySelector('header').offsetHeight;
                const targetPosition = targetElement.offsetTop - headerHeight - 20;
                
                window.scrollTo({ top: targetPosition, behavior: 'smooth' });
            }
        });
    });
}

function initScrollAnimations() {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
                entry.target.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            }
        });
    }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });

    const animatedElements = document.querySelectorAll(
        '.feature-card, .program-block, .partner-card, .speaker-slide, .stat-item, .session-item, .location-card'
    );
    
    animatedElements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        observer.observe(el);
    });
}

// ==================== –°–¢–ò–õ–ò –ò –£–¢–ò–õ–ò–¢–´ ====================

function addCustomStyles() {
    if (document.getElementById('custom-styles')) return;
    
    const styles = document.createElement('style');
    styles.id = 'custom-styles';
    styles.textContent = `
        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes slideOutRight {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
        
        .notification-close {
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0;
            margin-left: 1rem;
            opacity: 0.8;
            transition: opacity 0.3s;
        }
        
        .notification-close:hover { opacity: 1; }
        
        .notification-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .notification-message { flex: 1; }
        
        .map-fallback {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
            background: #f8f9fa;
            text-align: center;
        }
        
        .fallback-content { padding: 2rem; }
        
        .fallback-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: block;
        }
        
        .fallback-content h3 {
            color: var(--primary-dark);
            margin-bottom: 1rem;
        }
        
        .fallback-content p {
            color: var(--text-light);
            margin-bottom: 1.5rem;
        }
        
        .fallback-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }
        
        .fallback-btn {
            padding: 0.75rem 1.5rem;
            background: var(--primary);
            color: white;
            text-decoration: none;
            border-radius: 6px;
            font-weight: 500;
            transition: background 0.3s;
            border: none;
            cursor: pointer;
        }
        
        .fallback-btn.secondary {
            background: var(--text-light);
        }
        
        .fallback-btn:hover {
            background: var(--primary-dark);
        }
        
        .fallback-btn.secondary:hover {
            background: var(--text);
        }
        
        .map-balloon {
            padding: 15px;
            max-width: 250px;
        }
        
        .map-balloon h3 {
            margin: 0 0 10px 0;
            color: var(--primary-dark);
            font-size: 1.2rem;
        }
        
        .map-balloon p {
            margin: 5px 0;
            font-size: 0.9rem;
            color: var(--text);
        }
    `;
    
    document.head.appendChild(styles);
}

// ==================== –û–°–ù–û–í–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================

function handleResize() {
    updateCarousel();
}

function cleanup() {
    stopAutoSlide();
}

document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
    addCustomStyles();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏
    initCarousel();
    initCarouselEvents();
    initBackToTop();
    initSmoothScroll();
    initScrollAnimations();
    initCalendarButtons();
    initMapFunctions();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    window.addEventListener('resize', handleResize);
    window.addEventListener('beforeunload', cleanup);
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.openNavigation = openNavigation;
window.addToCalendar = addToCalendar;
