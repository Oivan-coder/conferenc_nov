// –î–∞–Ω–Ω—ã–µ —Å–ø–∏–∫–µ—Ä–æ–≤ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
const speakers = [
    {
        name: "–§–∞–Ω–∏–ª—å –°–∞–º—É–∏–ª–æ–≤–∏—á –ë–∏–ª–∞–ª–æ–≤",
        role: "–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –æ–Ω–∫–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ",
        topic: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –æ–Ω–∫–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ",
        photo: "üßë‚Äç‚öïÔ∏è"
    },
    {
        name: "–ì—É–ª—å–Ω–∞—Ä–∞ –í–∏—Ç–∞–ª—å–µ–≤–Ω–∞ –õ–µ—à–∫–∏–Ω–∞",
        role: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ü–∏—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ", 
        topic: "–¶–∏—Ç–æ–ª–æ–≥–∏—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ",
        photo: "üë©‚Äç‚öïÔ∏è"
    },
    {
        name: "–ú–∞—Ä–∏—è –ì–µ–æ—Ä–≥–∏–µ–≤–Ω–∞ –õ–∞–º–±–∞–∫–∞—Ö–∞—Ä",
        role: "–†–ú–ê–ù–ü–û, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∞–¥—Ä–æ–≤–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é",
        topic: "–†–∞–∑–≤–∏—Ç–∏–µ –∫–∞–¥—Ä–æ–≤–æ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Å–ª—É–∂–±—ã",
        photo: "üë©‚Äçüè´"
    },
    {
        name: "–õ—é–±–æ–≤—å –ò–≤–∞–Ω–æ–≤–Ω–∞ –°—Ç–∞–Ω–∫–µ–≤–∏—á",
        role: "LabQuest, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Å–µ—Ç—å—é",
        topic: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è –∏ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
        photo: "üë®‚Äçüíº"
    },
    {
        name: "–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ Hadassah",
        role: "–ö–ª–∏–Ω–∏–∫–∞ Hadassah, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã", 
        topic: "JCI, ISO –∏ –ø–∞—Ü–∏–µ–Ω—Ç-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥",
        photo: "üè•"
    },
    {
        name: "–ì–ª–∞–≤–Ω—ã–µ –≤–Ω–µ—à—Ç–∞—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã",
        role: "–ü–æ –í–ò–ß –∏ –¥–µ—Ä–º–∞—Ç–æ–≤–µ–Ω–µ—Ä–æ–ª–æ–≥–∏–∏",
        topic: "–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å –í–ò–ß –∏ —Å–∏—Ñ–∏–ª–∏—Å–æ–º",
        photo: "üë®‚Äçüî¨"
    }
];

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
let currentSlide = 0;
let autoSlideInterval;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏
function initCarousel() {
    const carouselTrack = document.getElementById('carouselTrack');
    const carouselDots = document.getElementById('carouselDots');
    
    if (!carouselTrack || !carouselDots) return;
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    carouselTrack.innerHTML = '';
    carouselDots.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥—ã
    speakers.forEach((speaker, index) => {
        const slide = document.createElement('div');
        slide.className = 'speaker-slide';
        slide.setAttribute('data-slide-index', index);
        slide.innerHTML = `
            <div class="speaker-photo" aria-label="–§–æ—Ç–æ —Å–ø–∏–∫–µ—Ä–∞">${speaker.photo}</div>
            <div class="speaker-name">${speaker.name}</div>
            <div class="speaker-role">${speaker.role}</div>
            <div class="speaker-topic">${speaker.topic}</div>
        `;
        carouselTrack.appendChild(slide);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–æ—á–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const dot = document.createElement('button');
        dot.className = `carousel-dot ${index === 0 ? 'active' : ''}`;
        dot.setAttribute('aria-label', `–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–∞–π–¥—É ${index + 1}`);
        dot.addEventListener('click', () => goToSlide(index));
        carouselDots.appendChild(dot);
    });
    
    updateCarousel();
    startAutoSlide();
}

// –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
function moveSlide(direction) {
    const totalSlides = speakers.length;
    currentSlide = (currentSlide + direction + totalSlides) % totalSlides;
    updateCarousel();
    resetAutoSlide();
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–ª–∞–π–¥—É
function goToSlide(index) {
    currentSlide = index;
    updateCarousel();
    resetAutoSlide();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏
function updateCarousel() {
    const carouselTrack = document.getElementById('carouselTrack');
    const dots = document.querySelectorAll('.carousel-dot');
    const slideWidth = 320; // 300px + 20px gap
    
    if (carouselTrack) {
        carouselTrack.style.transform = `translateX(-${currentSlide * slideWidth}px)`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Ç–æ—á–∫—É
    dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentSlide);
        dot.setAttribute('aria-current', index === currentSlide ? 'true' : 'false');
    });
}

// –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏
function startAutoSlide() {
    autoSlideInterval = setInterval(() => {
        moveSlide(1);
    }, 5000);
}

function stopAutoSlide() {
    if (autoSlideInterval) {
        clearInterval(autoSlideInterval);
    }
}

function resetAutoSlide() {
    stopAutoSlide();
    startAutoSlide();
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
function addToCalendar() {
    try {
        const icsContent = `BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//LAB Evolution//Conference 2025//RU
BEGIN:VEVENT
UID:${Date.now()}@labevolution2025.ru
DTSTAMP:${new Date().toISOString().replace(/[-:]/g, '').split('.')[0]}Z
DTSTART:20251121T110000
DTEND:20251121T180000
SUMMARY:LAB Evolution 2025
DESCRIPTION:–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Å–ª—É–∂–±–∞: –æ—Ç –∞–Ω–∞–ª–∏–∑–∞ –∫ –∫–∞—á–µ—Å—Ç–≤—É"\\n\\nüìÖ –î–∞—Ç–∞: 21 –Ω–æ—è–±—Ä—è 2025 –≥.\\n‚è∞ –í—Ä–µ–º—è: 11:00\\nüìç –ú–µ—Å—Ç–æ: –ú–æ—Å–∫–≤–∞, –ö–æ–Ω–≥—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä\\n\\n–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: –ú–∏–Ω–∑–¥—Ä–∞–≤ –ú–û
LOCATION:–ú–æ—Å–∫–≤–∞, –ö–æ–Ω–≥—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä
ORGANIZER;CN="LAB Evolution":mailto:info@labevolution.ru
STATUS:CONFIRMED
END:VEVENT
END:VCALENDAR`;

        // –°–æ–∑–¥–∞–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        const blob = new Blob([icsContent], { 
            type: 'text/calendar;charset=utf-8' 
        });
        const url = window.URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = 'LAB_Evolution_2025.ics';
        link.style.display = 'none';
        
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        window.URL.revokeObjectURL(url);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification('üìÖ –§–∞–π–ª –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å–∫–∞—á–∞–Ω! –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ –≤–∞—à –∫–∞–ª–µ–Ω–¥–∞—Ä—å.', 'success');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
        showNotification('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è', 'error');
    }
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-message">${message}</span>
            <button class="notification-close" aria-label="–ó–∞–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ">√ó</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: ${type === 'success' ? 'var(--success)' : type === 'error' ? 'var(--error)' : 'var(--primary)'};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 8px;
        box-shadow: var(--shadow-hover);
        z-index: 10000;
        animation: slideInRight 0.3s ease;
        max-width: 400px;
        min-width: 300px;
    `;
    
    document.body.appendChild(notification);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = notification.querySelector('.notification-close');
    closeBtn.addEventListener('click', () => {
        closeNotification(notification);
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        closeNotification(notification);
    }, 5000);
}

function closeNotification(notification) {
    notification.style.animation = 'slideOutRight 0.3s ease';
    setTimeout(() => {
        if (notification.parentNode) {
            notification.parentNode.removeChild(notification);
        }
    }, 300);
}

// –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö"
function initBackToTop() {
    const backToTop = document.getElementById('backToTop');
    
    if (!backToTop) return;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    window.addEventListener('scroll', () => {
        if (window.pageYOffset > 300) {
            backToTop.classList.add('visible');
        } else {
            backToTop.classList.remove('visible');
        }
    });
    
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö
    backToTop.addEventListener('click', (e) => {
        e.preventDefault();
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
}

// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
function initSmoothScroll() {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            const href = this.getAttribute('href');
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞–≤–µ—Ä—Ö (–ª–æ–≥–æ—Ç–∏–ø)
            if (href === '#' || href === '#top') {
                e.preventDefault();
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
                return;
            }
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —è–∫–æ—Ä–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
            const targetElement = document.querySelector(href);
            if (targetElement) {
                e.preventDefault();
                const headerHeight = document.querySelector('header').offsetHeight;
                const targetPosition = targetElement.offsetTop - headerHeight - 20;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        });
    });
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
                entry.target.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    const animatedElements = document.querySelectorAll(
        '.feature-card, .program-block, .partner-card, .speaker-slide, .stat-item, .session-item'
    );
    
    animatedElements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        observer.observe(el);
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
function initCalendarButtons() {
    document.querySelectorAll('#addToCalendar, #addToCalendarFooter, .cta-button').forEach(button => {
        if (button.textContent.includes('–∫–∞–ª–µ–Ω–¥–∞—Ä—å') || button.id.includes('Calendar')) {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                addToCalendar();
            });
        }
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
function initCarouselEvents() {
    // –ö–Ω–æ–ø–∫–∏ –≤–ø–µ—Ä–µ–¥/–Ω–∞–∑–∞–¥
    const prevBtn = document.querySelector('.carousel-btn-prev');
    const nextBtn = document.querySelector('.carousel-btn-next');
    
    if (prevBtn) {
        prevBtn.addEventListener('click', () => moveSlide(-1));
    }
    
    if (nextBtn) {
        nextBtn.addEventListener('click', () => moveSlide(1));
    }
    
    // –ü–∞—É–∑–∞ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    const carousel = document.querySelector('.carousel-container');
    if (carousel) {
        carousel.addEventListener('mouseenter', stopAutoSlide);
        carousel.addEventListener('mouseleave', startAutoSlide);
        carousel.addEventListener('touchstart', stopAutoSlide);
        carousel.addEventListener('touchend', startAutoSlide);
    }
}

// –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
function handleResize() {
    updateCarousel();
}

// –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    initCarousel();
    initBackToTop();
    initSmoothScroll();
    initScrollAnimations();
    initCalendarButtons();
    initCarouselEvents();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', handleResize);
    
    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
    addNotificationStyles();
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
function addNotificationStyles() {
    if (document.getElementById('notification-styles')) return;
    
    const styles = document.createElement('style');
    styles.id = 'notification-styles';
    styles.textContent = `
        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        @keyframes slideOutRight {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }
        
        .notification-close {
            background: none;
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            padding: 0;
            margin-left: 1rem;
            opacity: 0.8;
            transition: opacity 0.3s;
        }
        
        .notification-close:hover {
            opacity: 1;
        }
        
        .notification-content {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }
        
        .notification-message {
            flex: 1;
        }
    `;
    
    document.head.appendChild(styles);
}

// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', () => {
    stopAutoSlide();
});
